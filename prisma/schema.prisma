// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{
  id Int @id @default(autoincrement())
  email String @unique
  firstName String
  lastName String
  phoneNumber String @unique
  address String?
  avatar String[] @default([""])
  isBlocked Boolean @default(true)
  role Role @default(USER)
   hash String
  hashRt String?
  Order Order[]
  evaluate Evaluate[]
 @@map("users")
}
enum Role {
  USER
  ADMIN
}

model Product {
  id Int @id @default(autoincrement())
  productName String
  description String
  price BigInt
  popularProduct String[]
  quantitySold BigInt
  averageEvaluate BigInt
  SumComment BigInt
  sumEvaluate BigInt
  discount Int
  status Boolean  
  productImages ProductImage[]
  evaluate Evaluate[]
  orders OrderOnProducts[]
  categorys ProductOnCategoryProducrs[]
  
}
model Order {
  id Int @id @default(autoincrement())
  orderStatus String
  paymentMethod PAYMENTMETHOD @default(DIRECT)
  paied Boolean
  ordered Boolean
  userId Int
  user User  @relation(fields: [userId], references: [id])
  products OrderOnProducts[]
  
}
model CategoryProduct {
  id Int @id @default(autoincrement())
  colors COLOR @default(GREEN)
  size SIZE @default(XL)
  quantity Int
  products ProductOnCategoryProducrs[]
}
model Evaluate {
 // id Int @id @default(autoincrement())
  starts Int
  comment String
  time DateTime @default(now())
  userId Int  
  user User? @relation(fields: [userId], references: [id])
  productId Int
  product Product? @relation(fields: [productId], references: [id])
  @@id([userId, productId])
}
model OrderOnProducts{
   orderId Int
   order Order @relation(fields: [orderId],references: [id])
   productId Int
   product Product @relation(fields: [productId],references: [id])
   numberOf Int?
   totalPrice BigInt?
   @@id([orderId, productId])
}
model ProductOnCategoryProducrs {
  productId Int
  product Product @relation(fields: [productId],references: [id])
  categoryId Int
  CategoryProduct CategoryProduct  @relation(fields: [categoryId],references: [id])
  @@id([productId,categoryId])
}
model ProductImage {
  id Int @id @default(autoincrement())
  Url String 
  productId Int
  product Product  @relation(fields: [productId],references: [id]) 
  
}
enum COLOR {
  BLACK
  RED
  WHITE
  BLUE
  YELLOW
  GREEN
}
enum SIZE {
  XS
  S
  M
  L
  XL
  XXL
}


enum PAYMENTMETHOD {
  DIRECT
  INDIRECT
}